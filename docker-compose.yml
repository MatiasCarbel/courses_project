version: "3.8"
services:
  # Users API Service
  users-api:
    build: ./users-api # Path to your Dockerfile for users-api
    ports:
      - "8001:8001" # Expose users-api on port 8001
    environment:
      - DB_HOST=mysql # MySQL service name
      - DB_PORT=3306
      - DB_USER=root # MySQL root user
      - DB_PASSWORD=yourpassword # MySQL root password
      - DB_NAME=usersdb # Name of the MySQL database
    depends_on:
      - mysql # Ensure MySQL starts before users-api

  # MySQL Service
  mysql:
    image: mysql:latest # MySQL Docker image
    environment:
      MYSQL_ROOT_PASSWORD: yourpassword # MySQL root password
      MYSQL_DATABASE: usersdb # Name of the database
    ports:
      - "3306:3306" # Expose MySQL on port 3306
    volumes:
      - mysql-data:/var/lib/mysql # Persist MySQL data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro # Mount init.sql for table creation (read-only)

  # Memcached Service
  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"

  # Courses API Service
  courses-api:
    build: ./courses-api # Path to your Dockerfile for courses-api
    ports:
      - "8002:8002" # Expose courses-api on port 8002
    environment:
      - MONGO_URI=mongodb://mongo:27017/coursesdb # MongoDB connection URI
    depends_on:
      - mongo # Ensure MongoDB starts before courses-api

  # MongoDB Service
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017" # Asegura que MongoDB est√© expuesto en localhost:27017
    volumes:
      - mongo-data:/data/db

  # Solr Service
  solr:
    image: solr:latest
    ports:
      - "8983:8983" # Expose Solr on port 8983
    volumes:
      - solr-data:/var/solr

  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ management plugin

  # Search API Service
  search-api:
    build: ./search-api # Path to your Dockerfile for search-api
    ports:
      - "8003:8003" # Expose search-api on port 8003
    depends_on:
      - rabbitmq # Ensure RabbitMQ starts before search-api

  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_BASE_API_URL=http://localhost:8001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - users-api
      - courses-api
      - search-api

volumes:
  mysql-data:
  mongo-data:
  solr-data:
